/* Generated By:JavaCC: Do not edit this line. PA5Constants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PA5Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PUBLIC = 5;
  /** RegularExpression Id. */
  int PREFACE = 6;
  /** RegularExpression Id. */
  int PREFACE1 = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int STATIC = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int EXTENDS = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int WHILE = 20;
  /** RegularExpression Id. */
  int PRINTLN = 21;
  /** RegularExpression Id. */
  int LENGTH = 22;
  /** RegularExpression Id. */
  int LONG = 23;
  /** RegularExpression Id. */
  int MALLOC = 24;
  /** RegularExpression Id. */
  int SIZEOF = 25;
  /** RegularExpression Id. */
  int THIS = 26;
  /** RegularExpression Id. */
  int NEW = 27;
  /** RegularExpression Id. */
  int BANG = 28;
  /** RegularExpression Id. */
  int COLON = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int EQUALS = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int LT = 35;
  /** RegularExpression Id. */
  int GT = 36;
  /** RegularExpression Id. */
  int LPAREN = 37;
  /** RegularExpression Id. */
  int RPAREN = 38;
  /** RegularExpression Id. */
  int LBRACKET = 39;
  /** RegularExpression Id. */
  int RBRACKET = 40;
  /** RegularExpression Id. */
  int LCURLY = 41;
  /** RegularExpression Id. */
  int RCURLY = 42;
  /** RegularExpression Id. */
  int PLUS_OP = 43;
  /** RegularExpression Id. */
  int MINUS_OP = 44;
  /** RegularExpression Id. */
  int TIMES_OP = 45;
  /** RegularExpression Id. */
  int NUMBER = 46;
  /** RegularExpression Id. */
  int ID = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"public\"",
    "\"#include <stdio.h>\\n#include <stdbool.h>\\nvoid print(int n){printf(\\\"%10d\\\\n\\\",n);}\"",
    "\"#include <stdio.h>\\n#include <stdbool.h>\\nvoid print(int n){printf(\\\"%10d\\\\n\\\",n);}\\n#include <stdlib.h>\"",
    "\"class\"",
    "\"static\"",
    "\"void\"",
    "\"String\"",
    "\"extends\"",
    "\"return\"",
    "\"int\"",
    "\"bool\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"print\"",
    "\"length\"",
    "\"long\"",
    "\"malloc\"",
    "\"sizeof\"",
    "\"this\"",
    "\"new\"",
    "\"!\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\">\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "<NUMBER>",
    "<ID>",
  };

}
